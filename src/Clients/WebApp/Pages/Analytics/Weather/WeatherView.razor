@page "/analytics/weather"
@using SmartHome.Clients.WebApp.Shared.Components.DateRangePicker
@using SmartHome.Application.Shared.Queries.WeatherStation.GetTemperature
@using SmartHome.Application.Shared.Queries.WeatherStation.GetWindParameters
@using SmartHome.Application.Shared.Queries.WeatherStation.GetHumidity
@using SmartHome.Application.Shared.Queries.WeatherStation.GetPrecipitation
@using SmartHome.Application.Shared.Queries.WeatherStation.GetPressure
@using SmartHome.Clients.WebApp.Shared.Components.TemperatureChart
@using SmartHome.Clients.WebApp.Shared.Components.HumidityChart
@using SmartHome.Clients.WebApp.Shared.Components.PressureChart
@using SmartHome.Clients.WebApp.Shared.Components.PrecipitationChart
@using SmartHome.Clients.WebApp.Shared.Components.WindChart
@using SmartHome.Application.Shared.Enums
@using Radzen
@using SmartHome.Application.Shared.Events
@using SmartHome.Application.Shared.Events.Devices.WeatherStation.Telemetry
@inherits WeatherViewModel

<RadzenTabs Change=@OnTabChange RenderMode="TabRenderMode.Client">
    <Tabs>
        <RadzenTabsItem Text="Temperature">
            <TemperatureChart @ref="TemperatureChart" NotificationHubEventName="@nameof(WeatherTelemetryEvent)" LoadDataAfterInitialization="@true" LoadData="@((DateTime? fromDate, DateTime? toDate, DateRangeGranulation? granulation) => WeatherService.GetTemperature(new GetTemperatureQuery {From = fromDate, To = toDate, Granulation = granulation}))"></TemperatureChart>
        </RadzenTabsItem>
        <RadzenTabsItem Text="Humidity">
            <HumidityChart  @ref="HumidityChart" NotificationHubEventName="@nameof(WeatherTelemetryEvent)" LoadData="@((DateTime? fromDate, DateTime? toDate, DateRangeGranulation? granulation) => WeatherService.GetHumidity(new GetHumidityQuery {From = fromDate, To = toDate, Granulation = granulation}))"></HumidityChart>
        </RadzenTabsItem>
        <RadzenTabsItem Text="Pressure">
            <PressureChart @ref="PressureChart" NotificationHubEventName="@nameof(WeatherTelemetryEvent)" LoadData="@((DateTime? fromDate, DateTime? toDate, DateRangeGranulation? granulation) => WeatherService.GetPressure(new GetPressureQuery {From = fromDate, To = toDate, Granulation = granulation}))"></PressureChart>
        </RadzenTabsItem>
        <RadzenTabsItem Text="Wind">
            <WindChart @ref="WindChart" NotificationHubEventName="@nameof(WeatherTelemetryEvent)" LoadData="@((DateTime? fromDate, DateTime? toDate, DateRangeGranulation? granulation) => WeatherService.GetWindParameters(new GetWindParametersQuery {From = fromDate, To = toDate, Granulation = granulation}))"></WindChart>
        </RadzenTabsItem>
        <RadzenTabsItem Text="Precipitation">
            <PrecipitationChart @ref="PrecipitationChart" NotificationHubEventName="@nameof(WeatherTelemetryEvent)" LoadData="@((DateTime? fromDate, DateTime? toDate, DateRangeGranulation? granulation) => WeatherService.GetPrecipitation(new GetPrecipitationQuery{From = fromDate, To = toDate, Granulation = granulation}))"></PrecipitationChart>
        </RadzenTabsItem>
    </Tabs>
</RadzenTabs>

@code {


}