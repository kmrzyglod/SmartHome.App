@page "/event-log/history"
@using System.Text.Json
@using System.Threading
@using DevExtreme.AspNet.Data
@using DevExtreme.AspNet.Data.ResponseModel
@using SmartHome.Application.Shared.Queries.General.GetEvents
@using SmartHome.Clients.WebApp.Services.Logger
@inherits EventLogHistoryModel
<h3>Event log</h3>

<DxDataGrid 
            ShowDetailRow="true"
            ShowFilterRow="true"
            CssClass="mw-1100"
            T="@EventVm" 
            CustomData="@LoadEvents">
    <Columns>
        <DxDataGridColumn Field="@nameof(EventVm.Id)"  Caption="Id">
        </DxDataGridColumn>

        <DxDataGridColumn Field="@nameof(EventVm.Timestamp)" Caption="Timestamp">
        </DxDataGridColumn>

        <DxDataGridColumn Field="@nameof(EventVm.EventName)" Caption="Event name">
        </DxDataGridColumn>

        <DxDataGridColumn Field="@nameof(EventVm.EventType)" Caption="Event type">
        </DxDataGridColumn>

        <DxDataGridColumn Field="@nameof(EventVm.Source)" Caption="Source">
        </DxDataGridColumn>
    </Columns>
    <DetailRowTemplate>
        <DxTabs>
            <DxTabPage Text="Event payload">
                @{
                    EventVm? eventData = Events?.Result.FirstOrDefault(x => x.Id == context.Id);
                    Logger.LogWarning(eventData.ToString());
                }
                @if (eventData != null)
                {
                <div class="p-3">
                    @JsonSerializer.Serialize(eventData.EventData);
                   
                </div>
                }
                else
                {
                    <em>Loading data...</em>
                }
            </DxTabPage>
        </DxTabs>
    </DetailRowTemplate>
</DxDataGrid>

@code {

}