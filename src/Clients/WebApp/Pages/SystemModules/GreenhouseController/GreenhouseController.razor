@page "/modules/greenhouse-controller"
@using SmartHome.Clients.WebApp.Shared.Components.DeviceEventsLog;
@using  SmartHome.Clients.WebApp.Shared.Components.DeviceConnectionStatus;
@using Radzen
@using SmartHome.Clients.WebApp.Helpers
@using System.Globalization

@inherits GreenhouseControllerComponent

<div class="row">
    <div class="col-xl-3 col-md-12 col-sm-12 p-4">
        <RadzenCard Class="radzen-card">
            <div class="row">
                <div class="col-md-12" style="margin-bottom: 5px;">
                    <h2>Overview: </h2>
                    <div><DeviceConnectionStatus IsOnline="@GreenhouseControllerDeviceDetails.IsOnline"></DeviceConnectionStatus></div>
                    <div>Device Name: <b>@GreenhouseControllerDeviceDetails.DeviceName</b></div>
                    <div>Device ID: <b>@GREENHOUSE_CONTROLLER_DEVICE_ID</b></div>
                    <div>Last update: <b>@GreenhouseControllerDeviceDetails.LastStatusUpdate.ToDefaultFormat()</b></div>
                    <div>Last telemetry data update: <b>@GreenhouseControllerData.Timestamp.ToDefaultFormat()</b></div>
                    @if (GreenhouseControllerDeviceDetails.IsOnline)
                    {
                        <div>SSID: <b>@(GreenhouseControllerDeviceDetails.Ssid ?? "-")</b></div>
                        <div>RSSI: <b>@GreenhouseControllerDeviceDetails.Rssi dBm</b></div>
                        <div>IP: <b>@(GreenhouseControllerDeviceDetails.Ip ?? "-")</b></div>
                        <div>Gateway IP: <b>@(GreenhouseControllerDeviceDetails.GatewayIp ?? "-")</b></div>
                        <div>Free heap memory: <b>@GreenhouseControllerDeviceDetails.FreeHeapMemory B</b></div>
                    }
                    else
                    {
                        <div>SSID: <b>-</b></div>
                        <div>RSSI: <b>-</b></div>
                        <div>IP: <b>-</b></div>
                        <div>Gateway IP: <b>-</b></div>
                        <div>Free heap memory: <b>-</b></div>
                    }
                </div>
                <div class="col-md-12">
                    <RadzenButton Click=@((args) => PingDevice(GREENHOUSE_CONTROLLER_DEVICE_ID)) Text="Ping" ButtonStyle="ButtonStyle.Light" Icon="autorenew" Style="width: 100%;" Disabled="@IsPingButtonDisabled(GREENHOUSE_CONTROLLER_DEVICE_ID)" />
                </div>
                <div class="col-md-12" style="margin-top: 17px;">
                    <RadzenButton Click=@((args) => RefreshStatus(GREENHOUSE_CONTROLLER_DEVICE_ID)) Text="Refresh status" ButtonStyle="ButtonStyle.Light" Icon="refresh" Style="width: 100%;" Disabled="@IsRefreshButtonDisabled(GREENHOUSE_CONTROLLER_DEVICE_ID)" />
                </div>

            </div>
        </RadzenCard>
    </div>
    <div class="col-xl-9 col-md-12 col-sm-12 p-4">
        <RadzenCard Class="radzen-card">
            <div class="row">
                <div class="col-md-12">
                    <h2>Event log (from last 1 day): </h2>
                    <DeviceEventsLog DeviceId="@GREENHOUSE_CONTROLLER_DEVICE_ID"></DeviceEventsLog>
                </div>
            </div>
        </RadzenCard>
    </div>

    <div class="col-xl-3 col-md-12 col-sm-12 p-4">
        <RadzenCard Class="radzen-card">
            <div class="row">
                <div class="col-md-12" style="margin-bottom: 5px;">
                    <h2>Overview: </h2>
                    <div><DeviceConnectionStatus IsOnline="@WindowsControllerDeviceDetails.IsOnline"></DeviceConnectionStatus></div>
                    <div>Device Name: <b>@WindowsControllerDeviceDetails.DeviceName</b></div>
                    <div>Device ID: <b>@WINDOWS_CONTROLLER_DEVICE_ID</b></div>
                    <div>Last update: <b>@WindowsControllerDeviceDetails.LastStatusUpdate.ToDefaultFormat()</b></div>
                    @if (WindowsControllerDeviceDetails.IsOnline)
                    {
                        <div>SSID: <b>@(WindowsControllerDeviceDetails.Ssid ?? "-")</b></div>
                        <div>RSSI: <b>@WindowsControllerDeviceDetails.Rssi dBm</b></div>
                        <div>IP: <b>@(WindowsControllerDeviceDetails.Ip ?? "-")</b></div>
                        <div>Gateway IP: <b>@(WindowsControllerDeviceDetails.GatewayIp ?? "-")</b></div>
                        <div>Free heap memory: <b>@WindowsControllerDeviceDetails.FreeHeapMemory B</b></div>
                    }
                    else
                    {
                        <div>SSID: <b>-</b></div>
                        <div>RSSI: <b>-</b></div>
                        <div>IP: <b>-</b></div>
                        <div>Gateway IP: <b>-</b></div>
                        <div>Free heap memory: <b>-</b></div>
                    }
                </div>
                <div class="col-md-12">
                    <RadzenButton Click=@((args) => PingDevice(WINDOWS_CONTROLLER_DEVICE_ID)) Text="Ping" ButtonStyle="ButtonStyle.Light" Icon="autorenew" Style="width: 100%;" Disabled="@IsPingButtonDisabled(WINDOWS_CONTROLLER_DEVICE_ID)" />
                </div>
                <div class="col-md-12" style="margin-top: 17px;">
                    <RadzenButton Click=@((args) => RefreshStatus(WINDOWS_CONTROLLER_DEVICE_ID)) Text="Refresh status" ButtonStyle="ButtonStyle.Light" Icon="refresh" Style="width: 100%;" Disabled="@IsRefreshButtonDisabled(WINDOWS_CONTROLLER_DEVICE_ID)" />
                </div>

            </div>
        </RadzenCard>
    </div>
    <div class="col-xl-9 col-md-12 col-sm-12 p-4">
        <RadzenCard Class="radzen-card">
            <div class="row">
                <div class="col-md-12">
                    <h2>Event log (from last 1 day): </h2>
                    <DeviceEventsLog DeviceId="@WINDOWS_CONTROLLER_DEVICE_ID"></DeviceEventsLog>
                </div>
            </div>
        </RadzenCard>
    </div>
    <div class="col-lg-4 col-md-6 col-sm-12 p-4">
        <RadzenCard Class="radzen-card">
            <h2>Temperature</h2>
            <div class="row">
                <div class="col-md-12">
                    <RadzenRadialGauge Style="width: 100%; height: 350px;">
                        <RadzenRadialGaugeScale StartAngle="-150" EndAngle="150" Step="5" Min="-40" Max="50" TickPosition=GaugeTickPosition.Inside>
                            <RadzenRadialGaugeScalePointer Value=@GreenhouseControllerData.Temperature Length="0.6" ShowValue=true>
                                <Template Context="pointer">
                                    <h4 style="margin-top: 50px;">
                                        @Math.Round(pointer.Value, 2) °C
                                    </h4>
                                </Template>
                            </RadzenRadialGaugeScalePointer>
                            <RadzenRadialGaugeScaleRange From="-40" To="15" Fill="blue" />
                            <RadzenRadialGaugeScaleRange From="15" To="30" Fill="green" />
                            <RadzenRadialGaugeScaleRange From="30" To="50" Fill="red" />
                        </RadzenRadialGaugeScale>
                    </RadzenRadialGauge>
                </div>
            </div>
        </RadzenCard>
    </div>
    <div class="col-lg-4 col-md-6 col-sm-12 p-4">
        <RadzenCard Class="radzen-card">
            <h2>Humidity</h2>
            <div class="row">
                <div class="col-md-12">
                    <RadzenRadialGauge Style="width: 100%; height: 350px;">
                        <RadzenRadialGaugeScale StartAngle="-150" EndAngle="150" Step="5" Min="0" Max="100" TickPosition=GaugeTickPosition.Inside>
                            <RadzenRadialGaugeScalePointer Value=@GreenhouseControllerData.Humidity Length="0.6" ShowValue=true>
                                <Template Context="pointer">
                                    <h4 style="margin-top: 50px;">
                                        @Math.Round(pointer.Value, 2) %
                                    </h4>
                                </Template>
                            </RadzenRadialGaugeScalePointer>
                            <RadzenRadialGaugeScaleRange From="0" To="100" Fill="blue" />
                        </RadzenRadialGaugeScale>
                    </RadzenRadialGauge>
                </div>
            </div>
        </RadzenCard>
    </div>

    <div class="col-lg-4 col-md-6 col-sm-12 p-4">
        <RadzenCard Class="radzen-card">
            <h2>Insolation</h2>
            <div class="row">
                <div class="col-md-12">
                    <RadzenRadialGauge Style="width: 100%; height: 350px;">
                        <RadzenRadialGaugeScale StartAngle="-150" EndAngle="150" Step="5000" Min="0" Max="55000" TickPosition=GaugeTickPosition.Inside>
                            <RadzenRadialGaugeScalePointer Value=@GreenhouseControllerData.LightLevel Length="0.6" ShowValue=true>
                                <Template Context="pointer">
                                    <h4 style="margin-top: 50px;">
                                        @Math.Round(pointer.Value, 2) lux 
                                    </h4>
                                </Template>
                            </RadzenRadialGaugeScalePointer>
                            <RadzenRadialGaugeScaleRange From="0" To="55000" Fill="blue" />
                        </RadzenRadialGaugeScale>
                    </RadzenRadialGauge>
                </div>
            </div>
        </RadzenCard>
    </div>
    
    <div class="col-lg-4 col-md-6 col-sm-12 p-4">
        <RadzenCard Class="radzen-card">
            <h2>Door & windows management</h2>
            <div class="row">
                <div class="col-md-12">
                    <h3>Door</h3>
                    <RadzenSelectBar @bind-Value=@WindowsStatus.Door TValue="bool" Disabled="true" Change=@(state => {})>
                        <Items>
                            <RadzenSelectBarItem Text="Open" Value="true" />
                            <RadzenSelectBarItem Text="Closed" Value="false" />
                        </Items>
                    </RadzenSelectBar>
                    <h3 style="margin-top: 2rem">Window 1</h3>
                    <RadzenSelectBar  @bind-Value=@WindowsStatus.Window1 TValue="bool" Disabled="@IsWindowButtonDisabled(0)" Change=@(async state => await OnWindowStateChange(state, 0))>
                        <Items>
                            <RadzenSelectBarItem Text="Open" Value="true" />
                            <RadzenSelectBarItem Text="Closed" Value="false" />
                        </Items>
                    </RadzenSelectBar>
                    <h3 style="margin-top: 2rem">Window 2</h3>
                    <RadzenSelectBar  @bind-Value=@WindowsStatus.Window2 TValue="bool" Disabled="@IsWindowButtonDisabled(1)" Change=@(async state => await OnWindowStateChange(state, 1))>
                        <Items>
                            <RadzenSelectBarItem Text="Open" Value="true" />
                            <RadzenSelectBarItem Text="Closed" Value="false" />
                        </Items>
                    </RadzenSelectBar>
                </div>
            </div>
        </RadzenCard>
    </div>
    
<div class="col-lg-8 col-md-6 col-sm-12 p-4">
    <RadzenCard Class="radzen-card">
        <h2>Irrigation</h2>
        <div class="row">
            <div class=" col-lg-6 col-md-12">
                <h3>Water volume [l]:</h3>
                <RadzenNumeric TValue="int" Min="1" Max="60" @bind-Value="@IrrigationWaterVolume" Change=@(args => { }) />
                <h3 style="margin-top: 2rem">Maximum irrigation time [min]</h3>
                <RadzenNumeric TValue="int" Min="1" Max="20" @bind-Value="@MaximumIrrigationTime" Change=@(args => { }) /> 
                <div style="margin-top: 15px;">
                <RadzenButton style="margin: 0 1rem 1rem 0; width: 150px" Icon="play_arrow" ButtonStyle="ButtonStyle.Secondary" BusyText="Proceeding ..." IsBusy=@IsIrrigationInProgress() Click=@OnIrrigationStartClick Text="Start" />
                <RadzenButton style="margin: 0 1rem 1rem 0; width: 150px" Icon="cancel" BusyText="Aborting ..." Disabled="@(!IsIrrigationInProgress())" IsBusy=@IsIrrigationAborting() Click=@OnIrrigationAbortClick Text="Abort" />
                </div>
            </div>
            <div class="col-lg-6 col-md-12">
                <h3>Total water volume [l]:</h3>
                <p style="margin-bottom: 10px">@(IrrigationData?.TotalWaterVolume.ToString(CultureInfo.InvariantCulture) ?? "-")</p>
                <h3>Average water flow [l/min]:</h3>
                <p style="margin-bottom: 10px">@(IrrigationData?.AverageWaterFlow.ToString(CultureInfo.InvariantCulture) ?? "-")</p>
                <h3>Minimum water flow [l/min]:</h3>
                <p style="margin-bottom: 10px">@(IrrigationData?.MinWaterFlow.ToString(CultureInfo.InvariantCulture) ?? "-")</p>
                <h3>Maximum water flow [l/min]:</h3>
                <p style="margin-bottom: 10px">@(IrrigationData?.MaxWaterFlow.ToString(CultureInfo.InvariantCulture) ?? "-")</p>
                <h3>Irrigation time range:</h3>
                <p style="margin-bottom: 10px">@($"{IrrigationData?.IrrigationStartTime.ToDefaultFormat() ?? "-"} - {IrrigationData?.IrrigationEndTime.ToDefaultFormat() ?? "-"}")</p>
            </div>
        </div>
    </RadzenCard>
</div>

</div>

@code {

}
