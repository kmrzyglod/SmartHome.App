@using Microsoft.AspNetCore.Components;
@inject NavigationManager navigationManager

    <MatNavMenu Multi="true" Class="app-sidebar">
        <MatNavItem Href="@navigationManager.ToAbsoluteUri(" ").AbsoluteUri">
            <MatIcon>dashboard</MatIcon> <span class="miniHover">Dashboard</span>
        </MatNavItem>

        <MatNavSubMenu>
            <MatNavSubMenuHeader>
                <MatNavItem AllowSelection="false">
                    <MatIcon>bar_chart</MatIcon><span class="miniHover"> Data analytics</span>
                </MatNavItem>
            </MatNavSubMenuHeader>
            <MatNavSubMenuList>
                <MatNavItem Href="@navigationManager.ToAbsoluteUri("analytics/weather").AbsoluteUri">
                    <MatIcon>cloud</MatIcon> <span class="miniHover">Weather</span>
                </MatNavItem>
            </MatNavSubMenuList>
            <MatNavSubMenuList>
                <MatNavItem Disabled="true" Href="@navigationManager.ToAbsoluteUri("analytics/greenhouse").AbsoluteUri">
                    <MatIcon>local_florist</MatIcon> <span class="miniHover">Greenhouse</span>
                </MatNavItem>
            </MatNavSubMenuList>
        </MatNavSubMenu>

        <MatNavSubMenu>
            <MatNavSubMenuHeader>
                <MatNavItem AllowSelection="false">
                    <MatIcon>device_hub</MatIcon><span class="miniHover">System modules</span>
                </MatNavItem>
            </MatNavSubMenuHeader>
            <MatNavSubMenuList>
                <MatNavItem Href="@navigationManager.ToAbsoluteUri("modules/devices-manager").AbsoluteUri">
                    <MatIcon>developer_board</MatIcon> <span class="miniHover">Devices manager</span>
                </MatNavItem>
                <MatNavItem Href="@navigationManager.ToAbsoluteUri("modules/weather-station").AbsoluteUri">
                    <MatIcon>cloud</MatIcon> <span class="miniHover">Weather station</span>
                </MatNavItem>
                <MatNavItem Disabled="true" Href="@navigationManager.ToAbsoluteUri("modules/greenhouse-controller").AbsoluteUri">
                    <MatIcon>local_florist</MatIcon> <span class="miniHover">Greenhouse controller</span>
                </MatNavItem>
                <MatNavItem Disabled="true" Href="@navigationManager.ToAbsoluteUri("modules/power-switches").AbsoluteUri">
                    <MatIcon>power</MatIcon> <span class="miniHover">Power switches</span>
                </MatNavItem>
                <MatNavItem Disabled="true" Href="@navigationManager.ToAbsoluteUri("modules/light-switches").AbsoluteUri">
                    <MatIcon>highlight</MatIcon> <span class="miniHover">Light switches</span>
                </MatNavItem>
                <MatNavItem Disabled="true" Href="@navigationManager.ToAbsoluteUri("modules/home-sensors").AbsoluteUri">
                    <MatIcon>rss_feed</MatIcon> <span class="miniHover">Home sensors</span>
                </MatNavItem>
                <MatNavItem Disabled="true" Href="@navigationManager.ToAbsoluteUri("modules/alarm-control").AbsoluteUri">
                    <MatIcon>notification_important</MatIcon> <span class="miniHover">Alarm control</span>
                </MatNavItem>
                <MatNavItem Disabled="true" Href="@navigationManager.ToAbsoluteUri("modules/entry-gate").AbsoluteUri">
                    <MatIcon>business</MatIcon> <span class="miniHover">Entry gate</span>
                </MatNavItem>
            </MatNavSubMenuList>
        </MatNavSubMenu>

        <MatNavSubMenu>
            <MatNavSubMenuHeader>
                <MatNavItem AllowSelection="false">
                    <MatIcon>storage</MatIcon><span class="miniHover">Event log</span>
                </MatNavItem>
            </MatNavSubMenuHeader>
            <MatNavSubMenuList>
                <MatNavItem Href="@navigationManager.ToAbsoluteUri("event-log/history").AbsoluteUri">
                    <MatIcon>history</MatIcon> <span class="miniHover">History</span>
                </MatNavItem>
            </MatNavSubMenuList>
        </MatNavSubMenu>
    </MatNavMenu>

@code {
    //public bool IsLoggedIn = false;

    //[CascadingParameter]
    //Task<AuthenticationState> authenticationStateTask { get; set; }

    //protected override async Task OnParametersSetAsync()
    //{
    //    IsLoggedIn = false;
    //    var user = (await authenticationStateTask).User;

    //    if (user.Identity.IsAuthenticated)
    //    {
    //        IsLoggedIn = true;
    //    }

    //https://gist.github.com/SteveSandersonMS/175a08dcdccb384a52ba760122cd2eda Examples
    //if (user.IsInRole("Admin"))
    //{
    // Perform some action only available to users in the 'admin' role
    //}
//}
}
