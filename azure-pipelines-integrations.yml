# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
 branches:
    include:
    - master
 paths:
    include:
    - src/Integrations/*
    - src/Domain/*
    - src/Application/*
    - src/Infrastructure/* 

pool:
  vmImage: 'windows-latest'

variables:
- name: buildConfiguration 
  value: 'Release'
- name: solution 
  value: '**/SmartHome.Integrations.Functions.csproj'
- name: buildPlatform
  value: 'Any CPU'
- group: Pipelines Variables

steps:
- task: mirror-git-repository-vsts-task@1
  continueOnError: true
  inputs:
    sourceGitRepositoryUri: 'https://dev.azure.com/kamilmrzyglod/Smart%20home/_git/SmartHome.App'
    sourceGitRepositoryPersonalAccessToken: $(DevOpsReposAccessToken)
    destinationGitRepositoryUri: 'https://github.com/kmrzyglod/SmartHome.App.git'
    destinationGitRepositoryPersonalAccessToken: $(GitHubAccessToken)
# - task: NuGetToolInstaller@1
#   displayName:  Install nuget

# - task: NuGetCommand@2
#   displayName:  Restore nuget packages
#   inputs:
#     restoreSolution: '$(solution)'

- task: DotNetCoreCLI@2
  displayName:  Build project
  inputs:
    command: 'build'
    projects: '$(solution)'
    arguments: '--configuration Release'

# - task: VSTest@2
#   displayName:  Run Tests
#   inputs:
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: "Publish project"
  inputs:
    command: publish
    arguments: '--configuration Release --output publish_output'
    projects: '$(solution)'
    publishWebProjects: false
    modifyOutputPath: true
    zipAfterPublish: false
- task: ArchiveFiles@2
  displayName: "Archive files"
  inputs:
    rootFolderOrFile: "$(System.DefaultWorkingDirectory)/publish_output/Functions"
    includeRootFolder: false
    archiveFile: "$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip"
- task: PublishBuildArtifacts@1
  displayName: "Publish artifacts"
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip'
    artifactName: 'drop'
