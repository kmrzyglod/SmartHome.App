# ASP.NET

# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
 branches:
    include:
    - master
 paths:
    include:
    - src/Clients/WebApp/*
    - src/Domain/*
    - src/Application/*
    - src/Infrastructure/* 

pool:
  image: 'ubuntu-latest'
# pool:
#     name: Default

variables:
- name: buildConfiguration 
  value: 'Release'
- name: solution 
  value: '**/SmartHome.Clients.WebApp.csproj'
- name: rootSolution 
  value: '**/SmartHome.App.sln'
- name: buildPlatform
  value: 'Any CPU'
- name: webAppBuild
  value: '$(Pipeline.Workspace)/SmartHome.WebApp-build'
- group: Pipelines Variables


stages:
- stage: Build
  displayName: 'Build'
  jobs:
  - job:  BuildWebApp
    displayName: 'Build Web Application'
    steps:
      - task: mirror-git-repository-vsts-task@1
        displayName: "Create repository mirror on Github"
        continueOnError: true
        inputs:
          sourceGitRepositoryUri: 'https://dev.azure.com/kamilmrzyglod/Smart%20home/_git/SmartHome.App'
          sourceGitRepositoryPersonalAccessToken: $(DevOpsReposAccessToken)
          destinationGitRepositoryUri: 'https://github.com/kmrzyglod/SmartHome.App.git'
          destinationGitRepositoryPersonalAccessToken: $(GitHubAccessToken)
      - task: DotNetCoreCLI@2
        displayName:  Build & Publish Blazor client project
        inputs:
          command: 'publish'
          arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
          zipAfterPublish: false
          projects: '$(solution)'
          publishWebProjects: false
      - task: PublishPipelineArtifact@1
        displayName:  Publish artifacts
        inputs:
          targetPath: '$(Build.ArtifactStagingDirectory)' 
          artifactName: 'SmartHome.WebApp-build'
- stage: PublishTestVersion
  displayName: 'Publish Test version artifacts'
  jobs:
  - job:  "PublishTestVersion"
    displayName:  Publish Test version artifacts
    steps:
    - checkout: none
    - download: current
      displayName:  Download artifacts
      artifact: 'SmartHome.WebApp-build'
    - task: Bash@3
      displayName: 'Copy proper appsettings.json'
      inputs:
        targetType: inline
        script: 'cp "$(webAppBuild)/WebApp/wwwroot/appsettings/appsettings-prod.json"  "$(webAppBuild)/WebApp/wwwroot/appsettings.json"'
    - task: Bash@3
      displayName: 'Remove compressed appsettings.json files'
      inputs:
        targetType: inline
        script: 'rm -f "$(webAppBuild)/WebApp/wwwroot/appsettings.json.br" "$(webAppBuild)/WebApp/wwwroot/appsettings.json.gz"'
    - task: PublishPipelineArtifact@1
      displayName:  Publish artifacts
      inputs:
        targetPath: '$(webAppBuild)' 
        artifactName: 'SmartHome.WebApp-test'
      